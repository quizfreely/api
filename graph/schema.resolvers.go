package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"quizfreely/api/graph/model"
)

// CreateStudyset is the resolver for the createStudyset field.
func (r *mutationResolver) CreateStudyset(ctx context.Context, studyset model.StudysetInput) (*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: CreateStudyset - createStudyset"))
}

// UpdateStudyset is the resolver for the updateStudyset field.
func (r *mutationResolver) UpdateStudyset(ctx context.Context, id string, studyset *model.StudysetInput) (*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: UpdateStudyset - updateStudyset"))
}

// DeleteStudyset is the resolver for the deleteStudyset field.
func (r *mutationResolver) DeleteStudyset(ctx context.Context, id string) (*string, error) {
	panic(fmt.Errorf("not implemented: DeleteStudyset - deleteStudyset"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, displayName *string) (*model.AuthedUser, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// UpdateStudysetProgress is the resolver for the updateStudysetProgress field.
func (r *mutationResolver) UpdateStudysetProgress(ctx context.Context, studysetID string, progressChanges []*model.StudysetProgressTermInput) (*model.StudysetProgress, error) {
	panic(fmt.Errorf("not implemented: UpdateStudysetProgress - updateStudysetProgress"))
}

// DeleteStudysetProgress is the resolver for the deleteStudysetProgress field.
func (r *mutationResolver) DeleteStudysetProgress(ctx context.Context, studysetID string) (*string, error) {
	panic(fmt.Errorf("not implemented: DeleteStudysetProgress - deleteStudysetProgress"))
}

// UpdateStudysetSettings is the resolver for the updateStudysetSettings field.
func (r *mutationResolver) UpdateStudysetSettings(ctx context.Context, studysetID string, changedSettings model.StudysetSettingsInput) (*model.StudysetSettings, error) {
	panic(fmt.Errorf("not implemented: UpdateStudysetSettings - updateStudysetSettings"))
}

// Authed is the resolver for the authed field.
func (r *queryResolver) Authed(ctx context.Context) (*bool, error) {
	panic(fmt.Errorf("not implemented: Authed - authed"))
}

// AuthedUser is the resolver for the authedUser field.
func (r *queryResolver) AuthedUser(ctx context.Context) (*model.AuthedUser, error) {
	panic(fmt.Errorf("not implemented: AuthedUser - authedUser"))
}

// Studyset is the resolver for the studyset field.
func (r *queryResolver) Studyset(ctx context.Context, id string) (*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: Studyset - studyset"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// FeaturedStudysets is the resolver for the featuredStudysets field.
func (r *queryResolver) FeaturedStudysets(ctx context.Context, limit *int32, offset *int32) ([]*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: FeaturedStudysets - featuredStudysets"))
}

// RecentStudysets is the resolver for the recentStudysets field.
func (r *queryResolver) RecentStudysets(ctx context.Context, limit *int32, offset *int32) ([]*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: RecentStudysets - recentStudysets"))
}

// SearchStudysets is the resolver for the searchStudysets field.
func (r *queryResolver) SearchStudysets(ctx context.Context, q string, limit *int32, offset *int32) ([]*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: SearchStudysets - searchStudysets"))
}

// SearchQueries is the resolver for the searchQueries field.
func (r *queryResolver) SearchQueries(ctx context.Context, q string, limit *int32, offset *int32) ([]*model.SearchQuery, error) {
	panic(fmt.Errorf("not implemented: SearchQueries - searchQueries"))
}

// MyStudysets is the resolver for the myStudysets field.
func (r *queryResolver) MyStudysets(ctx context.Context, limit *int32, offset *int32) ([]*model.Studyset, error) {
	panic(fmt.Errorf("not implemented: MyStudysets - myStudysets"))
}

// StudysetProgress is the resolver for the studysetProgress field.
func (r *queryResolver) StudysetProgress(ctx context.Context, studysetID string) (*model.StudysetProgress, error) {
	panic(fmt.Errorf("not implemented: StudysetProgress - studysetProgress"))
}

// StudysetSettings is the resolver for the studysetSettings field.
func (r *queryResolver) StudysetSettings(ctx context.Context, studysetID string) (*model.StudysetSettings, error) {
	panic(fmt.Errorf("not implemented: StudysetSettings - studysetSettings"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}
*/
