type Query {
    authed: Boolean
    authedUser: AuthedUser
    studyset(id: ID!): Studyset
    user(id: ID!): User
    featuredStudysets(limit: Int, offset: Int): [Studyset]
    recentStudysets(limit: Int, offset: Int): [Studyset]
    searchStudysets(q: String!, limit: Int, offset: Int): [Studyset]
    myStudysets(limit: Int, offset: Int): [Studyset]
    studysetProgress(studysetId: ID!): StudysetProgress
}
type Mutation {
    createStudyset(studyset: StudysetInput!): Studyset
    updateStudyset(id: ID!, studyset: StudysetInput): Studyset
    deleteStudyset(id: ID!): ID
    updateUser(display_name: String): AuthedUser
    updateStudysetProgress(studysetId: ID!, progressChanges: [StudysetProgressTermInput!]!): StudysetProgress
    deleteStudysetProgress(studysetId: ID!): ID
}
type User {
    id: ID
    username: String
    display_name: String
}
type AuthedUser {
    id: ID
    username: String
    display_name: String
    auth_type: AuthType
    oauth_google_email: String
}
enum AuthType {
    USERNAME_PASSWORD
    OAUTH_GOOGLE
}
type Studyset {
    id: ID
    title: String
    private: Boolean
    updated_at: String
    user_id: ID
    user_display_name: String
    data: StudysetData
    terms_count: Int
}
type StudysetData {
    terms: [[String]]
}
input StudysetInput {
    title: String!
    private: Boolean!
    data: StudysetDataInput!
}
input StudysetDataInput {
    terms: [[String]]
}
type StudysetProgress {
    id: ID!
    user_id: ID!
    studyset_id: ID!
    terms: [StudysetProgressTerm!]!
    updated_at: String
}
type StudysetProgressTerm {
    term: String!
    def: String!
    termCorrect: Int!
    termIncorrect: Int!
    defCorrect: Int!
    defIncorrect: Int!
    termState: ProgressTermState
    defState: ProgressTermState
    sessionsSinceTermStateChange: Int
    sessionsSinceDefStateChange: Int
    firstReviewedAt: String!
    lastReviewedAt: String!
    reviewSessionsCount: Int!
    confusedTerms: [[String]]
    confusedDefs: [[String]]
}
input StudysetProgressTermInput {
    term: String!
    def: String!
    termCorrect: Int
    termIncorrect: Int
    defCorrect: Int
    defIncorrect: Int
    termState: ProgressTermState
    defState: ProgressTermState
    lastReviewedAt: String!
    confusedTerms: [[String]]
    confusedDefs: [[String]]
}
enum ProgressTermState {
    NEW
    LEARNING
    REVIEW
    RELEARNING
}
