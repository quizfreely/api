type Query {
    authed: Boolean
    authedUser: AuthedUser
    studyset(id: ID!): Studyset
    user(id: ID!): User
    featuredStudysets(limit: Int, offset: Int): [Studyset]
    recentStudysets(limit: Int, offset: Int): [Studyset]
    searchStudysets(q: String!, limit: Int, offset: Int): [Studyset]
    myStudysets(limit: Int, offset: Int): [Studyset]
}
type Mutation {
    createStudyset(studyset: StudysetInput!): Studyset
    updateStudyset(id: ID!, studyset: StudysetInput): Studyset
    deleteStudyset(id: ID!): ID
    updateUser(display_name: String): AuthedUser
}
type User {
    id: ID
    username: String
    display_name: String
}
type AuthedUser {
    id: ID
    username: String
    display_name: String
    auth_type: AuthType
    oauth_google_email: String
}
enum AuthType {
    USERNAME_PASSWORD
    OAUTH_GOOGLE
}
type Studyset {
    id: ID
    title: String
    private: Boolean
    updated_at: String
    user_id: ID
    user_display_name: String
    terms: [Term]
    terms_count: Int
}
type Term {
    id: ID
    term: String
    def: String
    created_at: String
    updated_at: String
}
input StudysetInput {
    title: String!
    private: Boolean!
    terms: [TermInput]
}
input TermInput {
    term: String
    def: String
}
